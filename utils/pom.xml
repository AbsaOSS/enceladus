	<!--
  ~ Copyright 2018 ABSA Group Limited
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");

~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License
at
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed
to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific
language governing permissions and
  ~ limitations under the License.
	-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>utils</artifactId>
	<packaging>jar</packaging>
	<parent>
		<groupId>za.co.absa.enceladus</groupId>
		<artifactId>parent</artifactId>
		<version>3.0.0-SNAPSHOT</version>
	</parent>
	<properties>
		<scalastyle.configLocation>${project.parent.basedir}/scalastyle-config.xml</scalastyle.configLocation>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.compat.version}</artifactId>
			<version>${scalatest.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.typesafe</groupId>
			<artifactId>config</artifactId>
			<version>${typesafe.config.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-yarn_${scala.compat.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>za.co.absa</groupId>
			<artifactId>atum-model_${scala.compat.version}</artifactId>
			<version>${atum.version}</version>
		</dependency>
		<dependency>
			<groupId>za.co.absa.commons</groupId>
			<artifactId>commons_${scala.compat.version}</artifactId>
			<version>${absa.commons.version}</version>
		</dependency>
		<dependency>
			<groupId>za.co.absa</groupId>
			<artifactId>spark-commons-spark${spark.compat.version}_${scala.compat.version}</artifactId>
			<version>${absa.spark.commons.version}</version>
		</dependency>
		<dependency>
			<groupId>za.co.absa</groupId>
			<artifactId>spark-commons-test_${scala.compat.version}</artifactId>
			<version>${absa.spark.commons.version}</version>
		</dependency>
		<dependency>
			<groupId>za.co.absa</groupId>
			<artifactId>spark-data-standardization_${scala.compat.version}</artifactId>
			<version>${spark.data.standardization.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest-flatspec_${scala.compat.version}</artifactId>
			<version>${scalatest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.mrpowers</groupId>
			<artifactId>spark-fast-tests_${scala.compat.version}</artifactId>
			<version>${spark.fast.tests.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.scalastyle</groupId>
				<artifactId>scalastyle-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>${scala.maven.plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<args>
						<arg>-Xfatal-warnings</arg>
						<arg>-unchecked</arg>
						<arg>-deprecation</arg>
						<arg>-feature</arg>
					</args>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven.antrun.plugin.version}</version>
				<executions>
					<execution>
						<id>copy</id>
						<phase>validate</phase>
						<configuration>
							<target>
								<copy file="${project.basedir}/src/main/resources/application.conf.template" tofile="${project.basedir}/src/main/resources/application.conf" overwrite="false"/>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>8</source>
					<target>8</target>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
