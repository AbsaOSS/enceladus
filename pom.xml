<!--
  ~ Copyright 2018-2019 ABSA Group Limited
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>za.co.absa</groupId>
    <artifactId>enceladus-parent</artifactId>
    <version>0.99.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <repositories>
        <repository>
            <id>spark-absa</id>
            <name>Spark-Absa</name>
            <url>https://dl.bintray.com/absa/spark-absa</url>
        </repository>
        <repository>
            <id>mongo-absa</id>
            <name>Mongo-Absa</name>
            <url>https://dl.bintray.com/absa/mongo-absa</url>
        </repository>
    </repositories>
    <modules>
        <module>utils</module>
        <module>conformance</module>
        <module>standardization</module>
        <module>dataModel</module>
        <module>dao</module>
        <module>menas</module>
        <module>migrations</module>
        <module>external/kafka</module>
        <module>external/fixedWidth</module>
        <module>testutils</module>
    </modules>
    <properties>
        <encoding>UTF-8</encoding>
        <!--plugin versions-->
        <maven.compiler.source>1.6</maven.compiler.source>
        <maven.compiler.target>1.6</maven.compiler.target>
        <maven.surefire.version>2.18.1</maven.surefire.version>
        <maven.scala.version>3.2.0</maven.scala.version>
        <maven.shade.version>2.3</maven.shade.version>
        <maven.war.version>2.2</maven.war.version>
        <!--dependency versions-->
        <atum.version>0.1.3</atum.version>
        <junit.version>4.11</junit.version>
        <specs.version>2.4.16</specs.version>
        <scalatest.version>2.2.4</scalatest.version>
        <scalatest.maven.version>1.0</scalatest.maven.version>
        <scala.version>2.11.12</scala.version>
        <scala.compat.version>2.11</scala.compat.version>
        <spark.version>2.4.0</spark.version>
        <spark.compat.version>2.4</spark.compat.version>
        <spark.hofs.version>0.1.0</spark.hofs.version>
        <typesafe.config.version>1.3.1</typesafe.config.version>
        <spline.version>0.3.6</spline.version>
        <mongo.java.driver.version>3.6.4</mongo.java.driver.version>
        <mockito.version>2.10.0</mockito.version>
        <spark.xml.version>0.4.1</spark.xml.version>
        <scopt.version>3.7.0</scopt.version>
        <kafka.spark.version>0-10</kafka.spark.version>
        <abris.version>2.1.0</abris.version>
        <classutil.version>1.2.0</classutil.version>
        <spring.version>2.0.0.RELEASE</spring.version>
        <spring.ldap.version>5.0.3.RELEASE</spring.ldap.version>
        <spring.kerberos.version>1.0.1.RELEASE</spring.kerberos.version>
        <mongo.scala.driver.version>2.5.0-ABSA-1</mongo.scala.driver.version>
        <jackson.version>2.9.8</jackson.version>
        <gson.version>2.8.2</gson.version>
        <scala.java8.compat.version>0.9.0</scala.java8.compat.version>
        <webjars.locator.version>0.35</webjars.locator.version>
        <bson.codec.jsr310.version>3.1.3</bson.codec.jsr310.version>
        <openui5.version>1.58.2</openui5.version>
        <hadoop.version>2.7.7</hadoop.version>
        <ujson.version>0.7.1</ujson.version>
        <requests.version>0.1.6</requests.version>
        <diffson.version>2.0.2</diffson.version>
        <spray.json.version>1.3.5</spray.json.version>
        <!--other properties-->
        <skip.integration.tests>true</skip.integration.tests>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-client</artifactId>
            <version>${hadoop.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.compat.version}</artifactId>
            <version>${spark.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.compat.version}</artifactId>
            <version>${spark.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>za.co.absa</groupId>
            <artifactId>spark-hofs</artifactId>
            <version>${spark.hofs.version}</version>
        </dependency>
        <!-- Test -->
        <dependency>
            <groupId>org.specs2</groupId>
            <artifactId>specs2-core_${scala.compat.version}</artifactId>
            <version>${specs.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.compat.version}</artifactId>
            <version>${scalatest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>za.co.absa</groupId>
            <artifactId>atum</artifactId>
            <version>${atum.version}</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <!-- disable surefire -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <!-- enable scalatest -->
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>${scalatest.maven.version}</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>WDF TestSuite.txt</filereports>
                    <!--
                        Set heap memory to 4000 MB so array conformance test and conformance
                        end to end test could run. This can be removed later when dynamic conformance
                        becomes more efficient
                    -->
                    <argLine>-Xmx4000m</argLine>
                </configuration>
                <executions>
                    <execution>
                        <id>unit-tests</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <suffixes>(?&lt;!IntegrationSuite)</suffixes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>integration-tests</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <suffixes>(?&lt;=IntegrationSuite)</suffixes>
                            <skipTests>${skip.integration.tests}</skipTests>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven.shade.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <transformers>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                            <resource>application.conf</resource>
                        </transformer>
                    </transformers>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.scalastyle</groupId>
                <artifactId>scalastyle-maven-plugin</artifactId>
                <version>1.0.0</version>
                <configuration>
                    <verbose>false</verbose>
                    <failOnViolation>true</failOnViolation>
                    <failOnWarning>false</failOnWarning>
                    <includeTestSourceDirectory>false</includeTestSourceDirectory>
                    <sourceDirectory>${project.basedir}/src/main/scala</sourceDirectory>
                    <testSourceDirectory>${project.basedir}/src/test/scala</testSourceDirectory>
                    <configLocation>scalastyle-config.xml</configLocation>
                    <outputFile>${project.basedir}/target/scalastyle-output.xml</outputFile>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>integration</id>
            <properties>
                <skip.integration.tests>false</skip.integration.tests>
            </properties>
        </profile>
        <profile>
            <id>selenium</id>
            <modules>
                <module>selenium</module>
            </modules>
        </profile>
        <profile>
            <id>examples</id>
            <modules>
                <module>examples</module>
            </modules>
        </profile>
    </profiles>
</project>
